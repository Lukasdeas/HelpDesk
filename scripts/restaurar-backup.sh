#!/bin/bash

# Script de Restaura√ß√£o de Backup - Sistema Helpdesk IT
# ATEN√á√ÉO: Este script ir√° SUBSTITUIR todos os dados do banco!

set -e

# Verificar par√¢metros
if [ $# -eq 0 ]; then
    echo "‚ùå Uso: $0 <arquivo_backup.sql.gz>"
    echo ""
    echo "üìÅ Backups dispon√≠veis:"
    ls -la /home/helpdesk/app/backups/helpdesk_*.sql.gz 2>/dev/null || echo "Nenhum backup encontrado"
    exit 1
fi

BACKUP_FILE="$1"

# Verificar se arquivo existe
if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Erro: Arquivo $BACKUP_FILE n√£o encontrado"
    exit 1
fi

# Carregar vari√°veis do .env
if [ -f "/home/helpdesk/app/.env" ]; then
    source /home/helpdesk/app/.env
fi

# Verificar DATABASE_URL
if [ -z "$DATABASE_URL" ]; then
    echo "‚ùå Erro: DATABASE_URL n√£o est√° definida"
    exit 1
fi

echo "‚ö†Ô∏è  ATEN√á√ÉO: RESTAURA√á√ÉO DE BACKUP"
echo "=================================="
echo ""
echo "üóÉÔ∏è Arquivo: $BACKUP_FILE"
echo "üéØ Banco: $(echo $DATABASE_URL | sed 's/.*@//' | sed 's/\/.*//')"
echo ""
echo "‚ö†Ô∏è  ISTO IR√Å SUBSTITUIR TODOS OS DADOS ATUAIS!"
echo ""
read -p "Tem certeza que deseja continuar? (digite 'CONFIRMO'): " confirmacao

if [ "$confirmacao" != "CONFIRMO" ]; then
    echo "‚ùå Opera√ß√£o cancelada"
    exit 1
fi

echo ""
echo "üõë Parando aplica√ß√£o..."
pm2 stop helpdesk || echo "Aplica√ß√£o n√£o estava rodando"

echo "üíæ Fazendo backup de seguran√ßa antes da restaura√ß√£o..."
SAFETY_BACKUP_DIR="/home/helpdesk/app/backups/safety"
mkdir -p $SAFETY_BACKUP_DIR
SAFETY_DATE=$(date +%Y%m%d_%H%M%S)
pg_dump "$DATABASE_URL" > "$SAFETY_BACKUP_DIR/before_restore_$SAFETY_DATE.sql"
echo "‚úÖ Backup de seguran√ßa salvo em: $SAFETY_BACKUP_DIR/before_restore_$SAFETY_DATE.sql"

echo ""
echo "üóÉÔ∏è Iniciando restaura√ß√£o..."

# Descompactar se necess√°rio
if [[ "$BACKUP_FILE" == *.gz ]]; then
    echo "üì¶ Descompactando arquivo..."
    TEMP_FILE="/tmp/restore_temp_$(date +%s).sql"
    gunzip -c "$BACKUP_FILE" > "$TEMP_FILE"
    RESTORE_FILE="$TEMP_FILE"
else
    RESTORE_FILE="$BACKUP_FILE"
fi

# Executar restaura√ß√£o
echo "‚ö° Restaurando banco de dados..."
psql "$DATABASE_URL" < "$RESTORE_FILE"

if [ $? -eq 0 ]; then
    echo "‚úÖ Restaura√ß√£o conclu√≠da com sucesso!"
    
    # Limpar arquivo tempor√°rio
    if [ ! -z "$TEMP_FILE" ] && [ -f "$TEMP_FILE" ]; then
        rm "$TEMP_FILE"
    fi
    
    echo ""
    echo "üöÄ Reiniciando aplica√ß√£o..."
    pm2 restart helpdesk
    
    echo ""
    echo "üéâ RESTAURA√á√ÉO CONCLU√çDA!"
    echo "========================"
    echo ""
    echo "üìä Verificar status: pm2 list"
    echo "üìù Ver logs: pm2 logs helpdesk"
    echo "üåê Testar aplica√ß√£o na porta 3000"
    
else
    echo "‚ùå Erro durante a restaura√ß√£o!"
    
    # Limpar arquivo tempor√°rio em caso de erro
    if [ ! -z "$TEMP_FILE" ] && [ -f "$TEMP_FILE" ]; then
        rm "$TEMP_FILE"
    fi
    
    echo ""
    echo "üîÑ Tentando restaurar backup de seguran√ßa..."
    psql "$DATABASE_URL" < "$SAFETY_BACKUP_DIR/before_restore_$SAFETY_DATE.sql"
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Backup de seguran√ßa restaurado"
        pm2 restart helpdesk
    else
        echo "‚ùå Falha cr√≠tica: N√£o foi poss√≠vel restaurar backup de seguran√ßa!"
        echo "‚ö†Ô∏è Contate o administrador imediatamente"
    fi
    
    exit 1
fi